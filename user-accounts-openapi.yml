openapi: 3.0.1
info:
  title: User Accounts
  description: 'This is an API for user accounts and their associated addresses'
  version: 0.0.1
tags:
  - name: user
    description: Everything about user accounts
  - name: address
    description: Everything about user addresses
components:
  schemas:
    user:
      type: object
      properties:
        guid:
          type: integer
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        email:
          type: string
        bio:
          type: string
        verified:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
    address:
      type: object
      properties:
        id:
          type: integer
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        apartment:
          type: string
        label:
          type: string
    userCondensed:
      type: object
      properties:
        guid:
          type: integer
        username:
          type: string
        avatar:
          type: string
        email:
          type: string
    userRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        email:
          type: string
        bio:
          type: string
    userPost:
      type: object
      properties:
        guid:
          type: integer
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        addresses:
          type: array
          items:
            type: string
        verified:
          type: boolean

servers:
  - url: https://localhost:/8080

paths:
  /api/users:
    get:
      tags:
        - users
      summary: Find all users
      description: Returns all users
      responses:
        '200':
          description: Successful operation
    post:
      tags:
        - users
      summary: Create an user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPost'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '406':
          description: Not Acceptable
  /api/users/{guid}:
    get:
      tags:
        - user
      summary: Find user by guid
      description: Returns a single user
      parameters:
        - name: guid
          schema:
            $ref: '#/components/schemas/user'
          in: path
          description: guid of user to return
          required: true
      responses:
        '200':
          description: Successful operation
        '204':
          description: No content
    patch:
      tags:
        - user
      summary: Edit user by guid
      description: Edit a user by guid
      parameters:
        - name: guid
          schema:
            $ref: '#/components/schemas/user'
          in: path
          description: guid of user to edit
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userRequest'
      responses:
        '200':
          description: Successful operation
        '406':
          description: Not Acceptable
    delete:
      tags:
        - user
      summary: Delete user by guid
      parameters:
        - name: guid
          in: path
          description: guid of user to delete
          required: true
      responses:
        '202':
          description: Accepted
        '204':
          description: No content
  /api/users/{guid}/condensed:
    get:
      tags:
        - user
      summary: get condensed info about a user by guid *DOES NOT REQUIRE AUTHENTICATION*
      description: get condensed info about a user by guid
      parameters:
      - name: guid
        schema:
          $ref: '#/components/schemas/userCondensed'
        in: path
        description: guid of user to show
        required: true
      responses:
        '200':
          description: Successful operation
        '406':
          description: Not Acceptable
  /api/users/{guid}/addresses:
    post:
      tags:
        - address
      summary: Posts a user's shipping address
      parameters:
        - name: userId
          schema:
            $ref: '#/components/schemas/user'
          in: path
          description: guid of user whose address to delete
          required: true
      requestBody:
        description: shipping address of user to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
    patch:
      tags:
        - address
      summary: Edit's a user's shipping address
      parameters:
        - name: guid
          schema:
              $ref: '#/components/schemas/user'
          in: path
          description: guid of user whose address to edit
          required: true
      requestBody:
        description: shipping address of user to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '406':
          description: Not Acceptable
  /api/users/{guid}/addresses/{addressId}:
    delete:
      tags:
        - address
      summary: Deletes a user's shipping address
      parameters:
        - name: guid
          in: path
          description: guid of user to delete
          required: true
        - name: addressId
          in: path
          description: id of address to delete
          required: true
      responses:
        '202':
          description: Accepted
        '204':
          description: No content
