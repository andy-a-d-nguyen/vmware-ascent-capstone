openapi: 3.0.1
info:
  title: User Accounts
  description: 'This is an API for user accounts and their associated addresses'
  version: 0.0.1
tags:
  - name: user
    description: Everything about user accounts
  - name: address
    description: Everything about user addresses
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: long
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        password:
          type: string
        email:
          type: string
        creditCard:
          type: string
        verified:
          type: boolean
    address:
      type: object
      properties:
        id:
          type: long
        userid:
          type: long
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        apartment:
          type: string
    userLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    userReturn:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        image:
          type: string
        email:
          type: string
        address:
          type: string
        verified:
          type: boolean

servers:
  - url: https://localhost:/8080

paths:
  /api/users:
    get:
      tags:
        - users
      summary: Find all users
      description:
      responses:
        '200':
          description: Successful operation
  /api/users/registration:
    post:
      tags:
        - Authentication
      summary: Add a new user
      description: user object that needs to be added
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
  /api/users/login:
    post:
      tags:
        - Authentication
      summary: Login an existing user
      description: log in an existing user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
  /api/users/logout:
    post:
      tags:
        - Authentication
      summary: Logout an existing user
      description: log out an existing user
      responses:
        '202':
          description: Accepted
  /api/users/{id}:
    get:
      tags:
        - user
      summary: Find user by id
      description: Returns a single user
      parameters:
        - name: id
          in: path
          description: id of user to return
          required: true
      responses:
        '200':
          description: Successful operation
        '204':
          description: No content
    post:
      tags:
        - user
      summary: Sets profile pic for user
      description: Returns updated user
      parameters:
        - name: id
          in: path
          description: id of user to return
          required: true
        - name: URL
          in: request body
          description: string of URL
          required: true
      responses:
        '200':
          description: Successful operation
    patch:
      tags:
        - user
      summary: Edit user by id
      description: Edit a user by id
      parameters:
        - name: id
          in: path
          description: id of user to edit
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userReturn'
      responses:
        '200':
          description: Successful operation
        '204':
          description: No content
    delete:
      tags:
        - user
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          description: id of user to delete
          required: true
      responses:
        '202':
          description: Accepted
        '204':
          description: No content
  /api/users/{userId}/addresses:
    get:
      tags:
        - address
      summary: Fetch all of a user's shipping addresses
      parameters:
        -name: userId
        in: path
        description: id of a user whose shipping addresses are being fetched
        required: true
      responses:
        '200':
          description: Successful operation
        '204':
          description: No content
    post:
      tags:
        - address
      summary: Posts a user's shipping address
      parameters:
        - name: userId
          in: path
          description: userId of user whose address to delete
        - name: address
          in: request body
          description: shipping address of user to add
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
    patch:
      tags:
        - address
      summary: Edit's a user's shipping address
      parameters:
        - name: userId
          in: path
          description: userId of user whose address to edit

        - name: address
          in: request body
          description: shipping address of user to add
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
  /api/users/{userId}/addresses/{addressId}:
    delete:
      tags:
        - address
      summary: Deletes a user's shipping address
      parameters:
        - name: userId
          in: path
          description: userId of user whose address to delete
        - name: address
          in: request body
          description: shipping address of user to delete
          required: true
      responses:
        '202':
          description: Accepted
        '204':
          description: No content
